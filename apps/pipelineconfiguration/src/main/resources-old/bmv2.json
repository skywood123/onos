{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 32, false],
        ["tmp_0", 32, false],
        ["tmp_1", 32, false],
        ["port_meter_ingress_control_ingress_colour", 2, false],
        ["tmp_2", 32, false],
        ["tmp_3", 32, false],
        ["port_meter_egress_control_egress_colour", 2, false],
        ["userMetadata.packet_colour", 8, false],
        ["_padding_0", 4, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "Ethernet_t",
      "id" : 2,
      "fields" : [
        ["dest_addr", 48, false],
        ["src_addr", 48, false],
        ["eth_type", 16, false]
      ]
    },
    {
      "name" : "Ipv4_t",
      "id" : 3,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["dscp", 6, false],
        ["ecn", 2, false],
        ["length", 16, false],
        ["id", 16, false],
        ["flag", 3, false],
        ["frag_off", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdr_checksum", 16, false],
        ["ipv4_src", 32, false],
        ["ipv4_dst", 32, false]
      ]
    },
    {
      "name" : "Mpls_t",
      "id" : 4,
      "fields" : [
        ["label", 20, false],
        ["exp", 3, false],
        ["s", 1, false],
        ["ttl", 8, false]
      ]
    },
    {
      "name" : "packet_in_hdr",
      "id" : 5,
      "fields" : [
        ["ingress_port", 16, false]
      ]
    },
    {
      "name" : "packet_out_hdr",
      "id" : 6,
      "fields" : [
        ["egress_port", 16, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "Ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 3,
      "header_type" : "Ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "mpls",
      "id" : 4,
      "header_type" : "Mpls_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "packet_in",
      "id" : 5,
      "header_type" : "packet_in_hdr",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "packet_out",
      "id" : 6,
      "header_type" : "packet_out_hdr",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x00ff",
              "mask" : null,
              "next_state" : "parse_packet_out"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_ethernet"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ]
        },
        {
          "name" : "parse_packet_out",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "packet_out"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_ethernet"
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_ethernet",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x8847",
              "mask" : null,
              "next_state" : "parse_mpls"
            },
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "eth_type"]
            }
          ]
        },
        {
          "name" : "parse_mpls",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "mpls"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_ipv4"
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_ipv4",
          "id" : 4,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "bandwidth_isolate.p4",
        "line" : 96,
        "column" : 8,
        "source_fragment" : "deparser"
      },
      "order" : ["packet_in", "ethernet", "mpls", "ipv4"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [
    {
      "name" : "ingress_control.port_meter_ingress_control.ingress_port_meter",
      "id" : 0,
      "source_info" : {
        "filename" : "include/port_meter.p4",
        "line" : 11,
        "column" : 37,
        "source_fragment" : "ingress_port_meter"
      },
      "is_direct" : false,
      "size" : 256,
      "rate_count" : 2,
      "type" : "bytes"
    },
    {
      "name" : "ingress_control.tenant_meter_ingress_control.tenant_port_meter",
      "id" : 1,
      "source_info" : {
        "filename" : "include/tenant_metering.p4",
        "line" : 16,
        "column" : 31,
        "source_fragment" : "tenant_port_meter"
      },
      "is_direct" : false,
      "size" : 256,
      "rate_count" : 2,
      "type" : "bytes"
    },
    {
      "name" : "egress_control.port_meter_egress_control.egress_port_meter",
      "id" : 2,
      "source_info" : {
        "filename" : "include/port_meter.p4",
        "line" : 24,
        "column" : 35,
        "source_fragment" : "egress_port_meter"
      },
      "is_direct" : false,
      "size" : 256,
      "rate_count" : 2,
      "type" : "bytes"
    }
  ],
  "counter_arrays" : [
    {
      "name" : "ingress_control.port_counter_ingress_control.ingress_port_counter",
      "id" : 0,
      "source_info" : {
        "filename" : "include/port_counter.p4",
        "line" : 10,
        "column" : 47,
        "source_fragment" : "ingress_port_counter"
      },
      "size" : 256,
      "is_direct" : false
    },
    {
      "name" : "ingress_control.forwarding.flow_counter",
      "id" : 1,
      "is_direct" : true,
      "binding" : "ingress_control.forwarding.l2_fwd",
      "source_info" : {
        "filename" : "include/forwarding.p4",
        "line" : 15,
        "column" : 50,
        "source_fragment" : "flow_counter"
      }
    },
    {
      "name" : "egress_control.port_counter_egress_control.egress_port_counter",
      "id" : 2,
      "source_info" : {
        "filename" : "include/port_counter.p4",
        "line" : 22,
        "column" : 47,
        "source_fragment" : "egress_port_counter"
      },
      "size" : 256,
      "is_direct" : false
    }
  ],
  "register_arrays" : [],
  "calculations" : [],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "ingress_control.forwarding.set_out_port",
      "id" : 3,
      "runtime_data" : [
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 22,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec=port"
          }
        }
      ]
    },
    {
      "name" : "ingress_control.forwarding._drop",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 25,
            "column" : 4,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "ingress_control.forwarding.send_to_cpu",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00ff"
            }
          ],
          "source_info" : {
            "filename" : "include/enum.p4",
            "line" : 13,
            "column" : 22,
            "source_fragment" : "255; ..."
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "packet_in"
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 29,
            "column" : 20,
            "source_fragment" : "hdr.packet_in.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "ingress_port"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 30,
            "column" : 20,
            "source_fragment" : "hdr.packet_in.ingress_port=(bit<16>)standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "ingress_control.forwarding.mpls_push",
      "id" : 6,
      "runtime_data" : [
        {
          "name" : "mpls_label_id",
          "bitwidth" : 20
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mpls"
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 35,
            "column" : 8,
            "source_fragment" : "hdr.mpls.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpls", "label"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 36,
            "column" : 8,
            "source_fragment" : "hdr.mpls.label=mpls_label_id"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpls", "exp"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 37,
            "column" : 8,
            "source_fragment" : "hdr.mpls.exp=0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpls", "s"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 38,
            "column" : 8,
            "source_fragment" : "hdr.mpls.s=1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpls", "ttl"]
            },
            {
              "type" : "hexstr",
              "value" : "0xff"
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 39,
            "column" : 8,
            "source_fragment" : "hdr.mpls.ttl=255"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "eth_type"]
            },
            {
              "type" : "hexstr",
              "value" : "0x8847"
            }
          ],
          "source_info" : {
            "filename" : "include/enum.p4",
            "line" : 8,
            "column" : 30,
            "source_fragment" : "0x8847; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 22,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec=port; ..."
          }
        }
      ]
    },
    {
      "name" : "ingress_control.forwarding.mpls_pop",
      "id" : 7,
      "runtime_data" : [
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mpls"
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 48,
            "column" : 8,
            "source_fragment" : "hdr.mpls.setInvalid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "eth_type"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0800"
            }
          ],
          "source_info" : {
            "filename" : "include/enum.p4",
            "line" : 7,
            "column" : 30,
            "source_fragment" : "0x0800; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 22,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec=port; ..."
          }
        }
      ]
    },
    {
      "name" : "ingress_control.forwarding.mpls_swap",
      "id" : 8,
      "runtime_data" : [
        {
          "name" : "mpls_label_id",
          "bitwidth" : 20
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpls", "label"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 55,
            "column" : 8,
            "source_fragment" : "hdr.mpls.label=mpls_label_id"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 22,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec=port; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpls", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["mpls", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 57,
            "column" : 8,
            "source_fragment" : "hdr.mpls.ttl=hdr.mpls.ttl-1"
          }
        }
      ]
    },
    {
      "name" : "ingress_control.tenant_meter_ingress_control._drop",
      "id" : 9,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "include/tenant_metering.p4",
            "line" : 28,
            "column" : 7,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "ingress_control.tenant_meter_ingress_control.read_meter_and_tag",
      "id" : 10,
      "runtime_data" : [
        {
          "name" : "tenant_outport",
          "bitwidth" : 8
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "local",
                    "value" : 0
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "include/tenant_metering.p4",
            "line" : 37,
            "column" : 40,
            "source_fragment" : "(bit<32>)tenant_outport"
          }
        },
        {
          "op" : "execute_meter",
          "parameters" : [
            {
              "type" : "meter_array",
              "value" : "ingress_control.tenant_meter_ingress_control.tenant_port_meter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.packet_colour"]
            }
          ],
          "source_info" : {
            "filename" : "include/tenant_metering.p4",
            "line" : 37,
            "column" : 8,
            "source_fragment" : "tenant_port_meter.execute_meter((bit<32>)tenant_outport,my_metadata.packet_colour)"
          }
        }
      ]
    },
    {
      "name" : "forwarding108",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["packet_out", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01ff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 108,
            "column" : 28,
            "source_fragment" : "standard_metadata.egress_spec=(bit<9>)hdr.packet_out.egress_port"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "packet_out"
            }
          ],
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 109,
            "column" : 28,
            "source_fragment" : "hdr.packet_out.setInvalid()"
          }
        }
      ]
    },
    {
      "name" : "port_counter15",
      "id" : 12,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "include/port_counter.p4",
            "line" : 15,
            "column" : 35,
            "source_fragment" : "(bit<32>)standard_metadata.ingress_port"
          }
        },
        {
          "op" : "count",
          "parameters" : [
            {
              "type" : "counter_array",
              "value" : "ingress_control.port_counter_ingress_control.ingress_port_counter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            }
          ],
          "source_info" : {
            "filename" : "include/port_counter.p4",
            "line" : 15,
            "column" : 8,
            "source_fragment" : "ingress_port_counter.count((bit<32>)standard_metadata.ingress_port)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "include/port_meter.p4",
            "line" : 14,
            "column" : 58,
            "source_fragment" : "(bit<32>)standard_metadata.ingress_port"
          }
        },
        {
          "op" : "execute_meter",
          "parameters" : [
            {
              "type" : "meter_array",
              "value" : "ingress_control.port_meter_ingress_control.ingress_port_meter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "port_meter_ingress_control_ingress_colour"]
            }
          ],
          "source_info" : {
            "filename" : "include/port_meter.p4",
            "line" : 14,
            "column" : 12,
            "source_fragment" : "ingress_port_meter.execute_meter<MeterColour>((bit<32>)standard_metadata.ingress_port,ingress_colour)"
          }
        }
      ]
    },
    {
      "name" : "port_counter27",
      "id" : 13,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "include/port_counter.p4",
            "line" : 27,
            "column" : 34,
            "source_fragment" : "(bit<32>)standard_metadata.egress_port"
          }
        },
        {
          "op" : "count",
          "parameters" : [
            {
              "type" : "counter_array",
              "value" : "egress_control.port_counter_egress_control.egress_port_counter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            }
          ],
          "source_info" : {
            "filename" : "include/port_counter.p4",
            "line" : 27,
            "column" : 8,
            "source_fragment" : "egress_port_counter.count((bit<32>)standard_metadata.egress_port)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "include/port_meter.p4",
            "line" : 28,
            "column" : 57,
            "source_fragment" : "(bit<32>)standard_metadata.egress_port"
          }
        },
        {
          "op" : "execute_meter",
          "parameters" : [
            {
              "type" : "meter_array",
              "value" : "egress_control.port_meter_egress_control.egress_port_meter"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "port_meter_egress_control_egress_colour"]
            }
          ],
          "source_info" : {
            "filename" : "include/port_meter.p4",
            "line" : 28,
            "column" : 12,
            "source_fragment" : "egress_port_meter.execute_meter<MeterColour>((bit<32>)standard_metadata.egress_port,egress_colour)"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "bandwidth_isolate.p4",
        "line" : 80,
        "column" : 8,
        "source_fragment" : "ingress_control"
      },
      "init_table" : "tbl_port_counter15",
      "tables" : [
        {
          "name" : "tbl_port_counter15",
          "id" : 0,
          "source_info" : {
            "filename" : "include/port_counter.p4",
            "line" : 15,
            "column" : 8,
            "source_fragment" : "ingress_port_counter.count((bit<32>)standard_metadata.ingress_port); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [12],
          "actions" : ["port_counter15"],
          "base_default_next" : "node_3",
          "next_tables" : {
            "port_counter15" : "node_3"
          },
          "default_entry" : {
            "action_id" : 12,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_forwarding108",
          "id" : 1,
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 108,
            "column" : 57,
            "source_fragment" : "=(bit<9>)hdr.packet_out.egress_port; //specify that only using 9 bit from the packet out egress port field ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [11],
          "actions" : ["forwarding108"],
          "base_default_next" : "ingress_control.tenant_meter_ingress_control.tenant_uplink_meter_table",
          "next_tables" : {
            "forwarding108" : "ingress_control.tenant_meter_ingress_control.tenant_uplink_meter_table"
          },
          "default_entry" : {
            "action_id" : 11,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "ingress_control.forwarding.l2_fwd",
          "id" : 2,
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 80,
            "column" : 10,
            "source_fragment" : "l2_fwd"
          },
          "key" : [
            {
              "match_type" : "ternary",
              "name" : "standard_metadata.ingress_port",
              "target" : ["standard_metadata", "ingress_port"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "hdr.ethernet.dest_addr",
              "target" : ["ethernet", "dest_addr"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "hdr.ethernet.src_addr",
              "target" : ["ethernet", "src_addr"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "hdr.ethernet.eth_type",
              "target" : ["ethernet", "eth_type"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "hdr.mpls.label",
              "target" : ["mpls", "label"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "hdr.mpls.s",
              "target" : ["mpls", "s"],
              "mask" : null
            },
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv4.ipv4_dst",
              "target" : ["ipv4", "ipv4_dst"],
              "mask" : null
            }
          ],
          "match_type" : "ternary",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [3, 5, 6, 7, 8, 4, 0],
          "actions" : ["ingress_control.forwarding.set_out_port", "ingress_control.forwarding.send_to_cpu", "ingress_control.forwarding.mpls_push", "ingress_control.forwarding.mpls_pop", "ingress_control.forwarding.mpls_swap", "ingress_control.forwarding._drop", "NoAction"],
          "base_default_next" : "ingress_control.tenant_meter_ingress_control.tenant_uplink_meter_table",
          "next_tables" : {
            "ingress_control.forwarding.set_out_port" : "ingress_control.tenant_meter_ingress_control.tenant_uplink_meter_table",
            "ingress_control.forwarding.send_to_cpu" : "ingress_control.tenant_meter_ingress_control.tenant_uplink_meter_table",
            "ingress_control.forwarding.mpls_push" : "ingress_control.tenant_meter_ingress_control.tenant_uplink_meter_table",
            "ingress_control.forwarding.mpls_pop" : "ingress_control.tenant_meter_ingress_control.tenant_uplink_meter_table",
            "ingress_control.forwarding.mpls_swap" : "ingress_control.tenant_meter_ingress_control.tenant_uplink_meter_table",
            "ingress_control.forwarding._drop" : "ingress_control.tenant_meter_ingress_control.tenant_uplink_meter_table",
            "NoAction" : "ingress_control.tenant_meter_ingress_control.tenant_uplink_meter_table"
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "ingress_control.tenant_meter_ingress_control.tenant_uplink_meter_table",
          "id" : 3,
          "source_info" : {
            "filename" : "include/tenant_metering.p4",
            "line" : 40,
            "column" : 10,
            "source_fragment" : "tenant_uplink_meter_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.egress_spec",
              "target" : ["standard_metadata", "egress_spec"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "hdr.mpls.label",
              "target" : ["mpls", "label"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [10, 1],
          "actions" : ["ingress_control.tenant_meter_ingress_control.read_meter_and_tag", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "__MISS__" : null,
            "__HIT__" : "ingress_control.tenant_meter_ingress_control.tenant_uplink_meter_filtering_table"
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "ingress_control.tenant_meter_ingress_control.tenant_uplink_meter_filtering_table",
          "id" : 4,
          "source_info" : {
            "filename" : "include/tenant_metering.p4",
            "line" : 53,
            "column" : 10,
            "source_fragment" : "tenant_uplink_meter_filtering_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "my_metadata.packet_colour",
              "target" : ["scalars", "userMetadata.packet_colour"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9, 2],
          "actions" : ["ingress_control.tenant_meter_ingress_control._drop", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "ingress_control.tenant_meter_ingress_control._drop" : null,
            "NoAction" : null
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_3",
          "id" : 0,
          "source_info" : {
            "filename" : "include/forwarding.p4",
            "line" : 107,
            "column" : 16,
            "source_fragment" : "standard_metadata.ingress_port==CPU_PORT"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "ingress_port"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00ff"
              }
            }
          },
          "true_next" : "tbl_forwarding108",
          "false_next" : "ingress_control.forwarding.l2_fwd"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "bandwidth_isolate.p4",
        "line" : 120,
        "column" : 8,
        "source_fragment" : "egress_control"
      },
      "init_table" : "tbl_port_counter27",
      "tables" : [
        {
          "name" : "tbl_port_counter27",
          "id" : 5,
          "source_info" : {
            "filename" : "include/port_counter.p4",
            "line" : 27,
            "column" : 8,
            "source_fragment" : "egress_port_counter.count((bit<32>)standard_metadata.egress_port); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [13],
          "actions" : ["port_counter27"],
          "base_default_next" : null,
          "next_tables" : {
            "port_counter27" : null
          },
          "default_entry" : {
            "action_id" : 13,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : []
    }
  ],
  "checksums" : [],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "./bandwidth_isolate.p4i",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}